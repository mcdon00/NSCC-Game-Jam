<!DOCTYPE html>

<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>Brickbreaker</title>
        <style type="text/css">
            body{
                padding:0;
                margin:0;
            }
        </style>
        <script type="text/javascript" src="classes/Collision.js"></script>
        <script type="text/javascript" src="http://code.createjs.com/createjs-2013.02.12.min.js"></script>
        <script type="text/javascript" src="http://code.createjs.com/preloadjs-0.2.0.min.js"></script>
        <script type="text/javascript" src="classes/Character.js"></script>
        <script type="text/javascript" src="classes/Enemy.js"></script>
        <script type="text/javascript" src="classes/Bullet.js"></script>
        <script type="text/javascript" src="classes/GameWorld.js"></script>
        <script type="text/javascript" src="classes/AssetManager.js"></script>
        <script type="text/javascript">

        var delta;
        var angle;
        var assetManager;
        var enemies = [];
        var bullets = [];
        var bulletCount;
        var overlay;
        var mouseX;
        var mouseY;
        var angles = [];
        var shooting = false;


        function init(){
        	bulletCount = 50;
        	//Create stage
        	canvas = document.getElementById("canvas");
        	canvas.height = 600;
			canvas.width = 800;

			stage = new createjs.Stage(canvas);

            gameWorld = new GameWorld();
            gameWorld.init(stage,"lib/ApplianceBGFlash.png");

        	player = new Character(stage);
        	player.init();

            enemy = new Enemy(stage);
            enemy.init();

            poolBullets();
            overlay = new createjs.Text("MouseX: \nMouseY: ", "12px Tahoma", "#FFF");
            overlay.x = 25;
			overlay.y = 20;
			stage.addChild(overlay);

        	createjs.Ticker.addEventListener("tick", tick);
        }

        function poolBullets(){
        	while(bullets.length < bulletCount ){
        		bullet = new Bullet(stage);
        		bullet.init();
        		bullets.push(bullet);
        	}
        }

        function addBullet(){


			//Fun with trig :)
			//bullets[bulletCount - 1].setMoving(true, 'right');	
			bullets[bulletCount - 1].setMoving(true, 'left');
        	bullets[bulletCount - 1].setPosX(player.clip.x);
        	bullets[bulletCount - 1].setPosY(player.clip.y);
        	stage.addChild(bullets[bulletCount - 1].clip);
        	bulletCount -= 1;
        	console.log(bulletCount);

        	if(bulletCount == 0) bulletCount = 50;

        	console.log('added bullet');
        }

        function onMouseDown(){
        	
        }
        function checkDirection(e){
            //Moving the ship\
            // down=false;
            // up=false;
            // right=false;
            // left=false;

            // if(e.keyCode == 40){
            //     down = true;
            // }
            // else if(e.keyCode == 38){
            //     up = true;
            // }
            // else if(e.keyCode == 39){
            //     right = true;
            // }
            // else if(e.keyCode == 37){
            //     left = true;
            // }
        }

        function onKeyDown(e){
        	if(e.keyCode == 32){
        		//addBullet();
        		shooting = true;
        	}
        }
        function onKeyUp(e){
        	if(e.keyCode == 32){
        		//addBullet();
        		shooting = false;
        	}	
        }


        function tick(event){
        	if(shooting){
        		addBullet();
        	}
        	delta = event.delta;
        	player.move(event.delta);
        	
        	for(var i = 0; i < bullets.length; i++){
        		bullets[i].move();
        		//console.log(bullets[i].getMoving());
        	}

        	delta = event.delta;
        	player.move();
            
            enemy.checkPlayerPos(player.clip.x,player.clip.y);

            //-------------collision detection
            //Loop through for all enemies
            // enemy/player
            var intersection = ndgmr.checkRectCollision(player.clip,enemy.clip);
            if(intersection){
            	console.log(intersection);

            	// if(intersection.rect2.x > (intersection.rect1.x - (intersection.rect1.regX + 15))){
            	// 	player.knockBack("east");
            	// }
            	// else if(intersection.rect2.x < (intersection.rect1.x + (intersection.rect1.regX + 15))){
            	// 	player.knockBack("west");
            	// }

            	// else if(intersection.rect2.y < (intersection.rect1.y + (intersection.rect1.regY + 30))){
            	// 	player.knockBack("north");	
            	// }
            	//player.knockBack("northEast");

                // stage.removeChild(enemy.clip);
                // enemy.clip.x = -2000;
            }
            // map bounds

            player.speed = 10;
            if(gameWorld.leftBound.hitTest(player.clip.x,player.clip.y)){
                if(!right){
                    player.speed = 0;
                }
            }else if(gameWorld.rightBound.hitTest(player.clip.x,player.clip.y)){
                if(!left){
                    player.speed = 0;
                }
            }else if(gameWorld.topBound.hitTest(player.clip.x,player.clip.y)){
                if(!down){
                    player.speed = 0;
                }
            }else if(gameWorld.bottomBound.hitTest(player.clip.x,player.clip.y)){
                if(!up){
                    player.speed = 0;
                }
            }

        	stage.update(delta);        	
        }

        document.addEventListener("mousedown", onMouseDown, true);
        document.addEventListener("keydown", onKeyDown, true);
        document.addEventListener("keyup", onKeyUp, true);
        document.addEventListener("keypress", checkDirection, true);


        </script>
    </head>
    <body onload="init();">
        <canvas id="canvas" style="background-color:black;"></canvas>
        <script type="text/javascript" src="script.js"></script>
    </body>
</html>