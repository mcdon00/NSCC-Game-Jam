<!DOCTYPE html>

<html>
    <head>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <title>Brickbreaker</title>
        <style type="text/css">
            body{
                padding:0;
                margin:0;
            }
        </style>
        <script type="text/javascript" src="classes/Collision.js"></script>
        <script type="text/javascript" src="http://code.createjs.com/createjs-2013.02.12.min.js"></script>
        <script type="text/javascript" src="http://code.createjs.com/preloadjs-0.2.0.min.js"></script>
        <script type="text/javascript" src="classes/Character.js"></script>
        <script type="text/javascript" src="classes/Enemy.js"></script>
        <script type="text/javascript" src="classes/Bullet.js"></script>
        <script type="text/javascript" src="classes/GameWorld.js"></script>
        <script type="text/javascript" src="classes/AssetManager.js"></script>
        <script type="text/javascript">


        var NUM_OF_ENEMIES = 5;
        var delta;
        var angle;
        var assetManager;
        var enemies = [];
        var bullets = [];
        var bulletCount;
        var overlay;
        var mouseX;
        var mouseY;
        var angles = [];
        var shooting = false;
        var bulletSpeedX;
        var bulletSpeedY;


        function init(){
        	bulletCount = 50;
        	//Create stage
        	canvas = document.getElementById("canvas");
        	canvas.height = 600;
			canvas.width = 800;

			stage = new createjs.Stage(canvas);

            gameWorld = new GameWorld();
            gameWorld.init(stage,"lib/ApplianceBGFlash.png");

        	player = new Character(stage);
        	player.init();

            for(var i=0;i<NUM_OF_ENEMIES;i++){
                enemy = new Enemy(stage);
                
                myX =Math.random() * ((canvas.width-150) - 150) + 150;
                myY = Math.random() * ((canvas.height-150) - 150) + 150;

                enemy.init(stage,myX,myY);
                enemies.push(enemy);
            }

            
            

            poolBullets();
            overlay = new createjs.Text("MouseX: \nMouseY: ", "12px Tahoma", "#FFF");
            overlay.x = 25;
			overlay.y = 20;
			stage.addChild(overlay);

        	createjs.Ticker.addEventListener("tick", tick);
        }

        function poolBullets(){
        	while(bullets.length < bulletCount ){
        		bullet = new Bullet(stage);
        		bullet.init();
        		bullets.push(bullet);
        	}
        }

        function addBullet(){

			//Fun with trig :)
			//bullets[bulletCount - 1].setMoving(true, 'right');	
			bullets[bulletCount - 1].setMoving(true, 'left');
        	bullets[bulletCount - 1].setPosX(player.clip.x);
        	bullets[bulletCount - 1].setPosY(player.clip.y);
        	bullets[bulletCount - 1].setSpeed((bulletSpeedX * 10), (bulletSpeedY * 10));
        	stage.addChild(bullets[bulletCount - 1].clip);
        	bulletCount -= 1;
        	console.log(bulletCount);

        	if(bulletCount == 0) bulletCount = 50;

        	console.log('added bullet');
        }

        function onMouseMove(e){
        	//This is where I will calculate the speeds for the bullet
        	mouseX = e.pageX;
        	mouseY = e.pageY;

        	var rectX = Math.abs(player.clip.x - mouseX);
        	var rectY = Math.abs(player.clip.y - mouseY);

        	var rectH = Math.sqrt((rectX * rectX) + (rectY * rectY));

        	//console.log(rectH);

        	bulletSpeedX = rectX / rectH;
        	bulletSpeedY = rectY / rectH;

        	if((mouseX < player.clip.x) && (mouseY < player.clip.y)){
        		bulletSpeedX *= -1;
        		bulletSpeedY *= -1;
        	}
        	else if((mouseX < player.clip.x) && (mouseY > player.clip.y)){
        		bulletSpeedX *= -1;
        	}
        	else if((mouseX > player.clip.x) && (mouseY < player.clip.y)){
        		bulletSpeedY *= -1;
        	}

        }

        function onMouseDown(){
        	shooting = true;
        	//addBullet();
        }

        function onMouseUp(){
        	shooting = false;
        }


        function tick(event){
        	delta = event.delta;
        	player.move();

        	if(shooting){
        		addBullet();
        	}
        	
        	for(var i = 0; i < bullets.length; i++){
        		bullets[i].move();
        		//console.log(bullets[i].clip.x + "   " + bullets[i].getSpeed());
        		//console.log(bullets[i].getMoving());
        	}

        	// delta = event.delta;
        	// player.move();
            
            for(var i = 0; i < enemies.length; i++){
                enemies[i].checkPlayerPos(player.clip.x,player.clip.y);    
            }
            

            //-------------collision detection
            //Loop through for all enemies
            // enemy/player
            var intersection = ndgmr.checkRectCollision(player.clip,enemy.clip);
            if(intersection){

            }

            for(var i = 0; i < bullets.length; i++){
            	for(var n = 0; n < enemies.length; n++){
            		var bulletIntersection = ndgmr.checkRectCollision(bullets[i].clip, enemies[n].clip);
            		if(bulletIntersection){
            			stage.removeChild(bullets[i].clip);
            			stage.removeChild(enemies[n].clip);
            			enemies[n].clip.x = 2000;
            		}		
            	}
            }
            
            

            // map bounds
            if(player.clip.x <= stage.x+90){
                // player.speed = 0;
            }else if(player.clip.x >= canvas.width+90){

            }else if(player.clip.y+player.clip.getBounds()['height'] <= stage.y+200){   


            }else if(player.clip.y >= canvas.height-125){

            }

            if(gameWorld.leftBound.hitTest(player.clip.x,player.clip.y)){
                gameWorld.changeLevel("lib/FurnitureBG.png");
                player.clip.x = 650;
                player.clip.y = 235; 
            }else if(gameWorld.rightBound.hitTest(player.clip.x,player.clip.y)){
                gameWorld.changeLevel("lib/MachinesBG.png");
                player.clip.x = 100;
                player.clip.y = 235; 
            }else if(gameWorld.topBound.hitTest(player.clip.x,player.clip.y)){
                gameWorld.changeLevel("lib/RubbishBG.png");
                player.clip.x = 360;
                player.clip.y = 525; 
            }else if(gameWorld.bottomBound.hitTest(player.clip.x,player.clip.y)){
                gameWorld.changeLevel("lib/ToxicBG.png");
                player.clip.x = 360;
                player.clip.y = 150; 
            }

        	stage.update(delta);        	
        }

        document.addEventListener("mousedown", onMouseDown, true);
        document.addEventListener("mouseup", onMouseUp, true);
        document.addEventListener("mousemove", onMouseMove, true);


        </script>
    </head>
    <body onload="init();">
        <canvas id="canvas" style="background-color:black;"></canvas>
        <script type="text/javascript" src="script.js"></script>
    </body>
</html>